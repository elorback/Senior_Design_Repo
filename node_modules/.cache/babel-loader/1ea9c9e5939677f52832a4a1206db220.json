{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elorb\\\\Desktop\\\\erics_repos\\\\CoolCats490\\\\squad-seek\\\\src\\\\Components\\\\groups\\\\groupDetails\\\\GroupCommentPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Container, Form, Button, Modal } from \"react-bootstrap\";\nimport axios from \"axios\"; //Styling\n\nimport \"../CSS/GroupCommentPost.css\"; //User token info\n\nimport AuthContext from \"../../../Store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupCommentPost = props => {\n  _s();\n\n  const [enteredComment, setComment] = useState(\"\");\n  const [showErrorModal, setShowErrorModal] = useState(false); //user token data to check if a user is logged in\n\n  const authCtx = useContext(AuthContext);\n  const isLogedIn = authCtx.isLoggedIn;\n\n  const commentHandler = event => {\n    setComment(event.target.value);\n  };\n\n  const submitHandler = event => {\n    //preventing the page to refresh when submit is pressed\n    event.preventDefault();\n\n    if (enteredComment.length <= 0) {\n      setShowErrorModal(true);\n    } else {\n      //create a object with required data\n      const newComment = {\n        groupID: props.groupInfo._id,\n        userId: props.userInfo._id,\n        userName: props.userInfo.username,\n        message: enteredComment\n      }; //try sending comment to the server\n\n      try {\n        //http://localhost:5000/comments/add/:id\n        axios.post('http://localhost:5000/comments/add', newComment).then(res => console.log(res.data));\n      } catch (err) {\n        console.log(err);\n      }\n    } //Clear comment field\n\n\n    setComment(\"\"); //reload data now that a comment has been added\n\n    props.onDataChanged(true);\n  };\n\n  let displayMsg = \"\";\n\n  if (props.userComments.comments && props.userComments.comments.length !== 0) {\n    displayMsg = \"Comments\";\n  } else {\n    displayMsg = \"No Comments\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"bg-light pt-4 text-dark pb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: displayMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), isLogedIn && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-1\",\n          controlId: \"ControlTextarea1\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 2,\n            placeholder: \"Type your comment here\",\n            onChange: commentHandler,\n            value: enteredComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showErrorModal,\n      onHide: () => setShowErrorModal(false),\n      dialogClassName: \"modal-90w\",\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"message-error-modal\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"You must enter a valid message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GroupCommentPost, \"0ZaSfXZYiK+ZdOEI0DKCq8fnwa4=\");\n\n_c = GroupCommentPost;\nexport default GroupCommentPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupCommentPost\");","map":{"version":3,"sources":["C:/Users/elorb/Desktop/erics_repos/CoolCats490/squad-seek/src/Components/groups/groupDetails/GroupCommentPost.js"],"names":["React","useState","useContext","Container","Form","Button","Modal","axios","AuthContext","GroupCommentPost","props","enteredComment","setComment","showErrorModal","setShowErrorModal","authCtx","isLogedIn","isLoggedIn","commentHandler","event","target","value","submitHandler","preventDefault","length","newComment","groupID","groupInfo","_id","userId","userInfo","userName","username","message","post","then","res","console","log","data","err","onDataChanged","displayMsg","userComments","comments"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Container, Form, Button, Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n//Styling\r\nimport \"../CSS/GroupCommentPost.css\";\r\n//User token info\r\nimport AuthContext from \"../../../Store/auth-context\";\r\n\r\nconst GroupCommentPost = (props) => {\r\n  const [enteredComment, setComment] = useState(\"\");\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n\r\n  //user token data to check if a user is logged in\r\n  const authCtx = useContext(AuthContext);\r\n  const isLogedIn = authCtx.isLoggedIn;\r\n\r\n  const commentHandler = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    //preventing the page to refresh when submit is pressed\r\n    event.preventDefault();\r\n    if(enteredComment.length <= 0){\r\n      setShowErrorModal(true)\r\n    }\r\n    else\r\n    {\r\n      //create a object with required data\r\n    const newComment = {\r\n      groupID:props.groupInfo._id,\r\n      userId:props.userInfo._id,\r\n      userName:props.userInfo.username,\r\n      message:enteredComment\r\n      \r\n    }\r\n\r\n    //try sending comment to the server\r\n    try {//http://localhost:5000/comments/add/:id\r\n      axios.post('http://localhost:5000/comments/add', newComment)\r\n      .then(res=> console.log(res.data));\r\n    } catch (err) {\r\n          console.log(err);\r\n    }\r\n  }\r\n    \r\n    //Clear comment field\r\n    setComment(\"\");\r\n\r\n    //reload data now that a comment has been added\r\n    props.onDataChanged(true)\r\n  };\r\n\r\n  let displayMsg = \"\";\r\n  if(props.userComments.comments && props.userComments.comments.length !== 0){\r\n    displayMsg=\"Comments\";\r\n  }\r\n  else{\r\n    displayMsg=\"No Comments\";\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Container className=\"bg-light pt-4 text-dark pb-4\">\r\n      <h5>{displayMsg}</h5>\r\n      {isLogedIn &&(<Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-1\" controlId=\"ControlTextarea1\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={2}\r\n            placeholder=\"Type your comment here\"\r\n            onChange={commentHandler}\r\n            value={enteredComment}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Post\r\n        </Button>\r\n      </Form>)}\r\n    </Container>\r\n\r\n\r\n    {/*Update Modal/Popup window settings start here                 */}\r\n    <Modal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        animation={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"message-error-modal\">Error</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          You must enter a valid message\r\n        </Modal.Body>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GroupCommentPost;\r\n"]},"metadata":{},"sourceType":"module"}