{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elorb\\\\Desktop\\\\490repos\\\\CoolCats490\\\\squad-seek\\\\src\\\\Components\\\\groups\\\\GroupList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //\n\nimport axios from \"axios\";\nimport GrouptListItem from \"./GroupListItem\"; //Styling\n\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupList = () => {\n  _s();\n\n  //groups object and setter here\n  const [groups, setGroups] = useState([]); //useEffect hook will load groups from data base when component is loaded\n\n  useEffect(() => {\n    //async call to database\n    const fetchGroups = async () => {\n      try {\n        const response = await axios(\"http://localhost:5000/activities/\"); //store groups in groups object\n\n        setGroups(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }; //Call async function\n\n\n    fetchGroups();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"sm\",\n    children: groups.map(group => /*#__PURE__*/_jsxDEV(GrouptListItem, {\n      title: group.name,\n      date: new Date(parseInt(group.time)),\n      type: group.type,\n      description: group.description,\n      tags: group.tagsArray,\n      id: group._id\n    }, group._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GroupList, \"UbUkkKKaTwVY7PWotTfxor2xXvY=\");\n\n_c = GroupList;\nexport default GroupList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"sources":["C:/Users/elorb/Desktop/490repos/CoolCats490/squad-seek/src/Components/groups/GroupList.js"],"names":["React","useState","useEffect","axios","GrouptListItem","Container","GroupList","groups","setGroups","fetchGroups","response","data","err","console","log","map","group","name","Date","parseInt","time","type","description","tagsArray","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CACA;;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC,CAFsB,CAItB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC,mCAAD,CAA5B,CADE,CAEF;;AACAK,QAAAA,SAAS,CAACE,QAAQ,CAACC,IAAV,CAAT;AACD,OAJD,CAIE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KARD,CAFc,CAWd;;;AACAH,IAAAA,WAAW;AACZ,GAbQ,EAaN,EAbM,CAAT;AAgBA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAC,IAAjB;AAAA,cAGGF,MAAM,CAACQ,GAAP,CAAYC,KAAD,iBACV,QAAC,cAAD;AAEE,MAAA,KAAK,EAAIA,KAAK,CAACC,IAFjB;AAGE,MAAA,IAAI,EAAI,IAAIC,IAAJ,CAASC,QAAQ,CAAEH,KAAK,CAACI,IAAR,CAAjB,CAHV;AAIE,MAAA,IAAI,EAAIJ,KAAK,CAACK,IAJhB;AAKE,MAAA,WAAW,EAAIL,KAAK,CAACM,WALvB;AAME,MAAA,IAAI,EAAIN,KAAK,CAACO,SANhB;AAOE,MAAA,EAAE,EAAIP,KAAK,CAACQ;AAPd,OACSR,KAAK,CAACQ,GADf;AAAA;AAAA;AAAA;AAAA,YADD;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAvCD;;GAAMlB,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//\r\nimport axios from \"axios\";\r\nimport GrouptListItem from \"./GroupListItem\";\r\n//Styling\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst GroupList = () => {\r\n  //groups object and setter here\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  //useEffect hook will load groups from data base when component is loaded\r\n  useEffect(() => {\r\n    //async call to database\r\n    const fetchGroups = async () => {\r\n      try {\r\n        const response = await axios(\"http://localhost:5000/activities/\");\r\n        //store groups in groups object\r\n        setGroups(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    //Call async function\r\n    fetchGroups();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container fluid=\"sm\">\r\n      \r\n      {/* map each group to a group item card */}\r\n      {groups.map((group) => (\r\n        <GrouptListItem\r\n          key = {group._id}\r\n          title = {group.name}\r\n          date = {new Date(parseInt( group.time ))}\r\n          type = {group.type}\r\n          description = {group.description}\r\n          tags = {group.tagsArray}\r\n          id = {group._id}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n\r\n};\r\n\r\nexport default GroupList;"]},"metadata":{},"sourceType":"module"}