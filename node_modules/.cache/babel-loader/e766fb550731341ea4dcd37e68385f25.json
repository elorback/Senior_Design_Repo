{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elorb\\\\Desktop\\\\erics_repos\\\\CoolCats490\\\\squad-seek\\\\src\\\\pages\\\\GroupDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport axios from \"axios\"; //token stuff\n\nimport { useContext } from \"react\";\nimport AuthContext from \"../Store/auth-context\"; //react imports\n\nimport { useState, useEffect, useCallback } from \"react\"; //Styling\n\nimport { Badge, Col, Row, Image, Container, Button, Modal, ListGroup, Accordion } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //pic\n\nimport defaultPic from \"./Media/group-defualt.jpg\"; //Components\n\nimport GroupUpdate from \"../Components/groups/GroupUpdate\";\nimport GroupDelete from \"../Components/groups/GroupDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroupDetails = props => {\n  _s();\n\n  //token stuff\n  const authCtx = useContext(AuthContext);\n  const isLogedIn = authCtx.isLoggedIn; //get the id from the url using params\n\n  const params = useParams(); //groups object and setter here\n\n  const [groups, setGroups] = useState([]); //use useState to store and set if the update group modals is shown\n\n  const [showUpdateModal, setShowUpdateModal] = useState(false); //use useState to store and set if the update group modals is shown\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false); //use useState to store if the data is still being fetched from the server\n\n  const [isLoading, setLoading] = useState(true); //Use useState to store user info from server\n\n  const [userInfo, setUserInfo] = useState([]); //U\n\n  const [dataChanged, setDataChanged] = useState(false); ///////////////////////////////////////////////////////////////\n\n  const loadData = useCallback(async () => {\n    //async call to database\n    const fetchGroups = async () => {\n      try {\n        let response = await axios(`http://localhost:5000/activities/${params.groupID}`); //store groups in groups object\n\n        setGroups(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    let fetchUser = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/users/me\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            token: authCtx.token\n          }\n        }); //store user info in user object\n\n        setUserInfo(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }; //Call async function\n\n\n    fetchGroups();\n    if (isLogedIn) fetchUser(); //set datachange back to false\n    //setDataChanged(false);\n\n    console.log(\"useCallback called\"); //setDataChanged(dataChanged + 1)\n  }, [params, authCtx.token, isLogedIn, dataChanged]); //useEffect hook will load groups from data base when component is loaded\n\n  useEffect(() => {\n    loadData();\n    setDataChanged(false);\n    console.log(\"useEffect called\");\n  }, [loadData]); //if data is not loaded will retrun a blank page saying loading\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"Data is Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n\n  const joinBtnHandler = event => {\n    let alreadyJoined = groups.members.find(x => x.id === userInfo._id);\n\n    if (!alreadyJoined) {\n      console.log(\"not in group\"); //get user stuff\n\n      let memberInfo = {\n        id: userInfo._id,\n        username: userInfo.username\n      };\n      groups.members.push(memberInfo);\n      const groupStuff = {\n        members: groups.members\n      };\n\n      try {\n        //http://localhost:5000/activities/join/:id\n        axios.post(\"http://localhost:5000/activities/join/\" + groups._id, groupStuff).then(res => console.log(res.data));\n      } catch (err) {\n        console.log(err);\n      } //Update the page data again\n\n\n      setDataChanged(true);\n    }\n  }; //Formatting date into a readable format\n\n\n  let date = new Date(parseInt(groups.time));\n  let month = date.toLocaleString(\"en-US\", {\n    month: \"long\"\n  });\n  let day = date.toLocaleString(\"en-US\", {\n    day: \"2-digit\"\n  });\n  let year = date.getFullYear();\n  let time = date.toLocaleTimeString(\"en-US\"); //console.log(\"group id \"+groups.createdBy)\n  //console.log(groups)\n  //console.log(\"User id = \"+userInfo._id)\n  //console.log(\"Group id = \"+groups.createdBy[0].id)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-light bg-secondary\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            style: {\n              maxHeight: \"300px\",\n              maxWidth: \"500px\"\n            },\n            src: defaultPic,\n            rounded: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Group Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), \" \", groups.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), groups.createdBy != null && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Group Started by:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), \" \", groups.createdBy[0].username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Group Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), \" \", parseInt(groups.type) ? \"Online\" : \"In Person\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), \" \", month + \" \" + day + \", \" + year + \" @ \" + time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), \" \", groups.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tags: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), groups.tagsArray.map((e, index) => /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"bg-warning text-dark me-2\",\n                children: e\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), groups.createdBy[0].id === userInfo._id && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowUpdateModal(true),\n              className: \"pr-2\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), isLogedIn && groups.createdBy[0].id === userInfo._id && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => setShowDeleteModal(true),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), isLogedIn && groups.createdBy[0].id !== userInfo._id && !groups.members.find(({\n              id\n            }) => id === userInfo._id) && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: joinBtnHandler,\n              children: \"Join Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [groups.members && /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"pt-4\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            className: \"text-black pb-4\",\n            children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n              eventKey: \"0\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: [\"Members in group \", /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 36\n                }, this), groups.members && /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"info\",\n                  children: groups.members.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                  className: \"pb-4\",\n                  children: groups.members && groups.members.map((e, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    children: e.username\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showUpdateModal,\n      onHide: () => setShowUpdateModal(false),\n      dialogClassName: \"modal-90w\",\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"group-update-modal\",\n          children: \"Update Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(GroupUpdate, {\n          title: groups.name,\n          type: groups.type,\n          date: groups.time,\n          description: groups.description,\n          tags: groups.tagsArray,\n          id: groups._id,\n          onModalClose: setShowUpdateModal,\n          onDataChanged: setDataChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      dialogClassName: \"modal-90w\",\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"group-delte-modal\",\n          children: \"Delete Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(GroupDelete, {\n          title: groups.name,\n          id: groups._id,\n          onModalClose: setShowDeleteModal //onGroupUpdated={}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GroupDetails, \"tfyoFX8J/3bgsKG6RIElLtWakwc=\", false, function () {\n  return [useParams];\n});\n\n_c = GroupDetails;\nexport default GroupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupDetails\");","map":{"version":3,"sources":["C:/Users/elorb/Desktop/erics_repos/CoolCats490/squad-seek/src/pages/GroupDetails.js"],"names":["useParams","axios","useContext","AuthContext","useState","useEffect","useCallback","Badge","Col","Row","Image","Container","Button","Modal","ListGroup","Accordion","defaultPic","GroupUpdate","GroupDelete","GroupDetails","props","authCtx","isLogedIn","isLoggedIn","params","groups","setGroups","showUpdateModal","setShowUpdateModal","showDeleteModal","setShowDeleteModal","isLoading","setLoading","userInfo","setUserInfo","dataChanged","setDataChanged","loadData","fetchGroups","response","groupID","data","err","console","log","fetchUser","get","headers","token","joinBtnHandler","event","alreadyJoined","members","find","x","id","_id","memberInfo","username","push","groupStuff","post","then","res","date","Date","parseInt","time","month","toLocaleString","day","year","getFullYear","toLocaleTimeString","maxHeight","maxWidth","name","createdBy","type","description","tagsArray","map","e","index","length"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\n//token stuff\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../Store/auth-context\";\r\n\r\n//react imports\r\nimport { useState, useEffect, useCallback } from \"react\";\r\n//Styling\r\nimport {\r\n  Badge,\r\n  Col,\r\n  Row,\r\n  Image,\r\n  Container,\r\n  Button,\r\n  Modal,\r\n  ListGroup,\r\n  Accordion,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//pic\r\nimport defaultPic from \"./Media/group-defualt.jpg\";\r\n//Components\r\nimport GroupUpdate from \"../Components/groups/GroupUpdate\";\r\nimport GroupDelete from \"../Components/groups/GroupDelete\";\r\n\r\nconst GroupDetails = (props) => {\r\n  //token stuff\r\n  const authCtx = useContext(AuthContext);\r\n  const isLogedIn = authCtx.isLoggedIn;\r\n\r\n  //get the id from the url using params\r\n  const params = useParams();\r\n\r\n  //groups object and setter here\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  //use useState to store and set if the update group modals is shown\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n\r\n  //use useState to store and set if the update group modals is shown\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  //use useState to store if the data is still being fetched from the server\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  //Use useState to store user info from server\r\n  const [userInfo, setUserInfo] = useState([]);\r\n\r\n  //U\r\n  const [dataChanged, setDataChanged] = useState(false);\r\n  ///////////////////////////////////////////////////////////////\r\n\r\n  const loadData = useCallback(async () => {\r\n    //async call to database\r\n    const fetchGroups = async () => {\r\n      try {\r\n        let response = await axios(\r\n          `http://localhost:5000/activities/${params.groupID}`\r\n        );\r\n        //store groups in groups object\r\n        setGroups(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    let fetchUser = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/users/me\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            token: authCtx.token,\r\n          },\r\n        });\r\n        //store user info in user object\r\n        setUserInfo(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    //Call async function\r\n    fetchGroups();\r\n    if (isLogedIn) fetchUser();\r\n    //set datachange back to false\r\n    //setDataChanged(false);\r\n    console.log(\"useCallback called\")\r\n    //setDataChanged(dataChanged + 1)\r\n  }, [params, authCtx.token, isLogedIn, dataChanged]);\r\n\r\n  //useEffect hook will load groups from data base when component is loaded\r\n  useEffect(() => {\r\n    loadData();\r\n    setDataChanged(false);\r\n    console.log(\"useEffect called\")\r\n  }, [loadData]);\r\n\r\n  //if data is not loaded will retrun a blank page saying loading\r\n  if (isLoading) {\r\n    return <Container>Data is Loading</Container>;\r\n  }\r\n\r\n \r\n  const joinBtnHandler = (event) => {\r\n    let alreadyJoined = groups.members.find((x) => x.id === userInfo._id);\r\n\r\n    if (!alreadyJoined) {\r\n      console.log(\"not in group\");\r\n\r\n      //get user stuff\r\n      let memberInfo = {\r\n        id: userInfo._id,\r\n        username: userInfo.username,\r\n      };\r\n\r\n      groups.members.push(memberInfo);\r\n\r\n      const groupStuff = {\r\n        members: groups.members,\r\n      };\r\n\r\n      try {\r\n        //http://localhost:5000/activities/join/:id\r\n        axios\r\n          .post(\r\n            \"http://localhost:5000/activities/join/\" + groups._id,\r\n            groupStuff\r\n          )\r\n          .then((res) => console.log(res.data));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      //Update the page data again\r\n      setDataChanged(true);\r\n    }\r\n  };\r\n  \r\n\r\n  //Formatting date into a readable format\r\n  let date = new Date(parseInt(groups.time));\r\n  let month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  let day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  let year = date.getFullYear();\r\n  let time = date.toLocaleTimeString(\"en-US\");\r\n\r\n  //console.log(\"group id \"+groups.createdBy)\r\n  //console.log(groups)\r\n  //console.log(\"User id = \"+userInfo._id)\r\n  //console.log(\"Group id = \"+groups.createdBy[0].id)\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-light bg-secondary\">\r\n        <Row className=\"pt-4\">\r\n          <Col>\r\n            <Image\r\n              style={{ maxHeight: \"300px\", maxWidth: \"500px\" }}\r\n              src={defaultPic}\r\n              rounded\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <section>\r\n              <h2>\r\n                <strong>Group Title:</strong> {groups.name}\r\n              </h2>\r\n              {groups.createdBy != null && (\r\n                <p>\r\n                  <strong>Group Started by:</strong>{\" \"}\r\n                  {groups.createdBy[0].username}\r\n                </p>\r\n              )}\r\n              <p>\r\n                <strong>Group Type:</strong>{\" \"}\r\n                {parseInt(groups.type) ? \"Online\" : \"In Person\"}{\" \"}\r\n              </p>\r\n              <p>\r\n                <strong>Date:</strong>{\" \"}\r\n                {month + \" \" + day + \", \" + year + \" @ \" + time}\r\n              </p>\r\n              <p>\r\n                <strong>Description:</strong> {groups.description}\r\n              </p>\r\n              <p>\r\n                <strong>Tags: </strong>\r\n                {groups.tagsArray.map((e, index) => (\r\n                  <Badge className=\"bg-warning text-dark me-2\" key={index}>\r\n                    {e}\r\n                  </Badge>\r\n                ))}\r\n              </p>\r\n              {groups.createdBy[0].id === userInfo._id && (\r\n                <Button\r\n                  onClick={() => setShowUpdateModal(true)}\r\n                  className=\"pr-2\"\r\n                >\r\n                  Update\r\n                </Button>\r\n              )}\r\n              {isLogedIn && groups.createdBy[0].id === userInfo._id && (\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => setShowDeleteModal(true)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )}\r\n              {isLogedIn && groups.createdBy[0].id !== userInfo._id \r\n              && !groups.members.find( ({id}) => id === userInfo._id) && (\r\n                <Button onClick={joinBtnHandler}>Join Group</Button>\r\n              )}\r\n            </section>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Container fluid>\r\n            {groups.members && <h4 className=\"pt-4\"> </h4>}\r\n\r\n            <Accordion className=\"text-black pb-4\">\r\n              <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header>\r\n                  Members in group <pre> </pre>\r\n                  {groups.members && (\r\n                    <Badge bg=\"info\">{groups.members.length}</Badge>\r\n                  )}\r\n                </Accordion.Header>\r\n                <Accordion.Body>\r\n                  <ListGroup className=\"pb-4\">\r\n                    {groups.members &&\r\n                      groups.members.map((e, index) => (\r\n                        <ListGroup.Item key={e._id} key={index}>\r\n                          {e.username}\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                  </ListGroup>\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/*Update Modal/Popup window settings start here                 */}\r\n      <Modal\r\n        show={showUpdateModal}\r\n        onHide={() => setShowUpdateModal(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        animation={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"group-update-modal\">Update Group</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <GroupUpdate\r\n            title={groups.name}\r\n            type={groups.type}\r\n            date={groups.time}\r\n            description={groups.description}\r\n            tags={groups.tagsArray}\r\n            id={groups._id}\r\n            onModalClose={setShowUpdateModal}\r\n            onDataChanged={setDataChanged}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        animation={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"group-delte-modal\">Delete Group</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <GroupDelete\r\n            title={groups.name}\r\n            id={groups._id}\r\n            onModalClose={setShowDeleteModal}\r\n            //onGroupUpdated={}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupDetails;\r\n"]},"metadata":{},"sourceType":"module"}