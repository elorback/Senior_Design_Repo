{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elorb\\\\Desktop\\\\erics_repos\\\\CoolCats490\\\\squad-seek\\\\src\\\\Components\\\\groups\\\\groupDetails\\\\GroupInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport AuthContext from \"../../../Store/auth-context\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport React from \"react\"; //Import other custom components\n\nimport GroupUpdate from \"../GroupUpdate\";\nimport GroupDelete from \"../GroupDelete\"; //Database stuff\n\nimport axios from \"axios\";\nimport TagsBadges from \"./TagsBadges\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupInfo = props => {\n  _s();\n\n  //User token hook to check if a user is logged in\n  const authCtx = useContext(AuthContext);\n  const isLogedIn = authCtx.isLoggedIn; //use useState to store and set if the update/delete group modals is shown\n\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const joinBtnHandler = event => {\n    let alreadyJoined = props.groups.members.find(x => x.id === props.userInfo._id);\n\n    if (!alreadyJoined) {\n      console.log(\"not in group\"); //get user stuff\n\n      let memberInfo = {\n        id: props.userInfo._id,\n        username: props.userInfo.username\n      };\n      props.groups.members.push(memberInfo);\n      const groupStuff = {\n        members: props.groups.members\n      };\n\n      try {\n        //http://localhost:5000/activities/join/:id\n        axios.post(\"http://localhost:5000/activities/join/\" + props.groups._id, groupStuff).then(res => console.log(res.data));\n      } catch (err) {\n        console.log(err);\n      } //Update the page data again\n\n\n      props.onDataChanged(true);\n    }\n  }; //Formatting date into a readable format\n\n\n  let date = new Date(parseInt(props.groups.time));\n  let month = date.toLocaleString(\"en-US\", {\n    month: \"long\"\n  });\n  let day = date.toLocaleString(\"en-US\", {\n    day: \"2-digit\"\n  });\n  let year = date.getFullYear();\n  let time = date.toLocaleTimeString(\"en-US\");\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [props.groups !== null && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Group Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), \" \", props.groups.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), props.groups.createdBy != null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Group Started by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \" \", props.groups.createdBy[0].username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Group Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), \" \", parseInt(props.groups.type) ? \"Online\" : \"In Person\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), \" \", month + \" \" + day + \", \" + year + \" @ \" + time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), \" \", props.groups.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tags: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), props.groups.tagsArray && props.groups.tagsArray.map((e, index) => /*#__PURE__*/_jsxDEV(TagsBadges, {\n          tagName: e,\n          index: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), props.groups.createdBy && props.groups.createdBy[0].id === props.userInfo._id && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowUpdateModal(true),\n        className: \"pr-2\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), props.groups.createdBy && isLogedIn && props.groups.createdBy[0].id === props.userInfo._id && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => setShowDeleteModal(true),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), props.groups.createdBy && isLogedIn && props.groups.createdBy[0].id !== props.userInfo._id && !props.groups.members.find(({\n        id\n      }) => id === props.userInfo._id) && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: joinBtnHandler,\n        children: \"Join Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showUpdateModal,\n      onHide: () => setShowUpdateModal(false),\n      dialogClassName: \"modal-90w\",\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"group-update-modal\",\n          children: \"Update Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(GroupUpdate, {\n          title: props.groups.name,\n          type: props.groups.type,\n          date: props.groups.time,\n          description: props.groups.description,\n          tags: props.groups.tagsArray,\n          id: props.groups._id,\n          createdBy: props.groups.createdBy,\n          members: props.groups.members,\n          onModalClose: setShowUpdateModal,\n          onDataChanged: props.onDataChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      dialogClassName: \"modal-90w\",\n      \"aria-labelledby\": \"example-custom-modal-styling-title\",\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"group-delte-modal\",\n          children: \"Delete Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(GroupDelete, {\n          title: props.groups.name,\n          id: props.groups._id,\n          onModalClose: setShowDeleteModal //onGroupUpdated={}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GroupInfo, \"2UVx7NpBiLTCqUp+9Y3GOUdjynY=\");\n\n_c = GroupInfo;\nexport default GroupInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupInfo\");","map":{"version":3,"sources":["C:/Users/elorb/Desktop/erics_repos/CoolCats490/squad-seek/src/Components/groups/groupDetails/GroupInfo.js"],"names":["useContext","useState","AuthContext","Button","Modal","React","GroupUpdate","GroupDelete","axios","TagsBadges","GroupInfo","props","authCtx","isLogedIn","isLoggedIn","showUpdateModal","setShowUpdateModal","showDeleteModal","setShowDeleteModal","joinBtnHandler","event","alreadyJoined","groups","members","find","x","id","userInfo","_id","console","log","memberInfo","username","push","groupStuff","post","then","res","data","err","onDataChanged","date","Date","parseInt","time","month","toLocaleString","day","year","getFullYear","toLocaleTimeString","name","createdBy","type","description","tagsArray","map","e","index"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA,QAAMC,OAAO,GAAGZ,UAAU,CAACE,WAAD,CAA1B;AACA,QAAMW,SAAS,GAAGD,OAAO,CAACE,UAA1B,CAH2B,CAK3B;;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMkB,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAIC,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAaC,OAAb,CAAqBC,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASf,KAAK,CAACgB,QAAN,CAAeC,GAAzD,CAApB;;AAEA,QAAI,CAACP,aAAL,EAAoB;AAClBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADkB,CAGlB;;AACA,UAAIC,UAAU,GAAG;AACfL,QAAAA,EAAE,EAAEf,KAAK,CAACgB,QAAN,CAAeC,GADJ;AAEfI,QAAAA,QAAQ,EAAErB,KAAK,CAACgB,QAAN,CAAeK;AAFV,OAAjB;AAKArB,MAAAA,KAAK,CAACW,MAAN,CAAaC,OAAb,CAAqBU,IAArB,CAA0BF,UAA1B;AAEA,YAAMG,UAAU,GAAG;AACjBX,QAAAA,OAAO,EAAEZ,KAAK,CAACW,MAAN,CAAaC;AADL,OAAnB;;AAIA,UAAI;AAAC;AACHf,QAAAA,KAAK,CACF2B,IADH,CAEI,2CAA2CxB,KAAK,CAACW,MAAN,CAAaM,GAF5D,EAGIM,UAHJ,EAKGE,IALH,CAKSC,GAAD,IAASR,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,IAAhB,CALjB;AAMD,OAPD,CAOE,OAAOC,GAAP,EAAY;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,OAxBiB,CA0BlB;;;AACA5B,MAAAA,KAAK,CAAC6B,aAAN,CAAoB,IAApB;AACD;AACF,GAhCD,CAT2B,CA2C3B;;;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAAChC,KAAK,CAACW,MAAN,CAAasB,IAAd,CAAjB,CAAX;AACA,MAAIC,KAAK,GAAGJ,IAAI,CAACK,cAAL,CAAoB,OAApB,EAA6B;AAAED,IAAAA,KAAK,EAAE;AAAT,GAA7B,CAAZ;AACA,MAAIE,GAAG,GAAGN,IAAI,CAACK,cAAL,CAAoB,OAApB,EAA6B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA7B,CAAV;AACA,MAAIC,IAAI,GAAGP,IAAI,CAACQ,WAAL,EAAX;AACA,MAAIL,IAAI,GAAGH,IAAI,CAACS,kBAAL,CAAwB,OAAxB,CAAX;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eACDvC,KAAK,CAACW,MAAN,KAAiB,IAAjB,iBAAyB;AAAA,8BACxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACiCX,KAAK,CAACW,MAAN,CAAa6B,IAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,cADwB,EAIvBxC,KAAK,CAACW,MAAN,CAAa8B,SAAb,IAA0B,IAA1B,iBACC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EACqC,GADrC,EAEGzC,KAAK,CAACW,MAAN,CAAa8B,SAAb,CAAuB,CAAvB,EAA0BpB,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,cALsB,eAUxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAC+B,GAD/B,EAEGW,QAAQ,CAAChC,KAAK,CAACW,MAAN,CAAa+B,IAAd,CAAR,GAA8B,QAA9B,GAAyC,WAF5C,EAEyD,GAFzD;AAAA;AAAA;AAAA;AAAA;AAAA,cAVwB,eAcxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OAC0BR,KAAK,GAAG,GAAR,GAAcE,GAAd,GAAoB,IAApB,GAA2BC,IAA3B,GAAkC,KAAlC,GAA0CJ,IADpE;AAAA;AAAA;AAAA;AAAA;AAAA,cAdwB,eAiBxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACiCjC,KAAK,CAACW,MAAN,CAAagC,WAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBwB,eAoBxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG3C,KAAK,CAACW,MAAN,CAAaiC,SAAb,IAA0B5C,KAAK,CAACW,MAAN,CAAaiC,SAAb,CAAuBC,GAAvB,CAA2B,CAACC,CAAD,EAAIC,KAAJ,kBAEpD,QAAC,UAAD;AAEE,UAAA,OAAO,EAAID,CAFb;AAGE,UAAA,KAAK,EAAIC;AAHX,WACSA,KADT;AAAA;AAAA;AAAA;AAAA,gBAFyB,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,cApBwB,EA+BvB/C,KAAK,CAACW,MAAN,CAAa8B,SAAb,IAA0BzC,KAAK,CAACW,MAAN,CAAa8B,SAAb,CAAuB,CAAvB,EAA0B1B,EAA1B,KAAiCf,KAAK,CAACgB,QAAN,CAAeC,GAA1E,iBACC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMZ,kBAAkB,CAAC,IAAD,CAAzC;AAAiD,QAAA,SAAS,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCsB,EAoCvBL,KAAK,CAACW,MAAN,CAAa8B,SAAb,IAA0BvC,SAA1B,IAAuCF,KAAK,CAACW,MAAN,CAAa8B,SAAb,CAAuB,CAAvB,EAA0B1B,EAA1B,KAAiCf,KAAK,CAACgB,QAAN,CAAeC,GAAvF,iBACC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,MAAMV,kBAAkB,CAAC,IAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCsB,EAyCvBP,KAAK,CAACW,MAAN,CAAa8B,SAAb,IAA0BvC,SAA1B,IACCF,KAAK,CAACW,MAAN,CAAa8B,SAAb,CAAuB,CAAvB,EAA0B1B,EAA1B,KAAiCf,KAAK,CAACgB,QAAN,CAAeC,GADjD,IAEC,CAACjB,KAAK,CAACW,MAAN,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,CAAC;AAAEE,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKf,KAAK,CAACgB,QAAN,CAAeC,GAA5D,CAFF,iBAGG,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAET,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CoB;AAAA;AAAA;AAAA;AAAA;AAAA,YADxB,eAkDF,QAAC,KAAD;AACI,MAAA,IAAI,EAAEJ,eADV;AAEI,MAAA,MAAM,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CAFpC;AAGI,MAAA,eAAe,EAAC,WAHpB;AAII,yBAAgB,oCAJpB;AAKI,MAAA,SAAS,EAAE,KALf;AAAA,8BAOI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAEL,KAAK,CAACW,MAAN,CAAa6B,IADtB;AAEE,UAAA,IAAI,EAAExC,KAAK,CAACW,MAAN,CAAa+B,IAFrB;AAGE,UAAA,IAAI,EAAE1C,KAAK,CAACW,MAAN,CAAasB,IAHrB;AAIE,UAAA,WAAW,EAAEjC,KAAK,CAACW,MAAN,CAAagC,WAJ5B;AAKE,UAAA,IAAI,EAAE3C,KAAK,CAACW,MAAN,CAAaiC,SALrB;AAME,UAAA,EAAE,EAAE5C,KAAK,CAACW,MAAN,CAAaM,GANnB;AAOE,UAAA,SAAS,EAAEjB,KAAK,CAACW,MAAN,CAAa8B,SAP1B;AAQE,UAAA,OAAO,EAAEzC,KAAK,CAACW,MAAN,CAAaC,OARxB;AASE,UAAA,YAAY,EAAEP,kBAThB;AAUE,UAAA,aAAa,EAAEL,KAAK,CAAC6B;AAVvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDE,eA6EA,QAAC,KAAD;AACE,MAAA,IAAI,EAAEvB,eADR;AAEE,MAAA,MAAM,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CAFlC;AAGE,MAAA,eAAe,EAAC,WAHlB;AAIE,yBAAgB,oCAJlB;AAKE,MAAA,SAAS,EAAE,KALb;AAAA,8BAOE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAEP,KAAK,CAACW,MAAN,CAAa6B,IADtB;AAEE,UAAA,EAAE,EAAExC,KAAK,CAACW,MAAN,CAAaM,GAFnB;AAGE,UAAA,YAAY,EAAEV,kBAHhB,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7EA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmGD,CArJD;;GAAMR,S;;KAAAA,S;AAuJN,eAAeA,SAAf","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport AuthContext from \"../../../Store/auth-context\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n//Import other custom components\r\nimport GroupUpdate from \"../GroupUpdate\";\r\nimport GroupDelete from \"../GroupDelete\";\r\n//Database stuff\r\nimport axios from \"axios\";\r\nimport TagsBadges from \"./TagsBadges\";\r\n\r\nconst GroupInfo = (props) => {\r\n  //User token hook to check if a user is logged in\r\n  const authCtx = useContext(AuthContext);\r\n  const isLogedIn = authCtx.isLoggedIn;\r\n\r\n  //use useState to store and set if the update/delete group modals is shown\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const joinBtnHandler = (event) => {\r\n    let alreadyJoined = props.groups.members.find((x) => x.id === props.userInfo._id);\r\n\r\n    if (!alreadyJoined) {\r\n      console.log(\"not in group\");\r\n\r\n      //get user stuff\r\n      let memberInfo = {\r\n        id: props.userInfo._id,\r\n        username: props.userInfo.username,\r\n      };\r\n\r\n      props.groups.members.push(memberInfo);\r\n\r\n      const groupStuff = {\r\n        members: props.groups.members,\r\n      };\r\n\r\n      try {//http://localhost:5000/activities/join/:id\r\n        axios\r\n          .post(\r\n            \"http://localhost:5000/activities/join/\" + props.groups._id,\r\n            groupStuff\r\n          )\r\n          .then((res) => console.log(res.data));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      //Update the page data again\r\n      props.onDataChanged(true);\r\n    }\r\n  };\r\n\r\n  //Formatting date into a readable format\r\n  let date = new Date(parseInt(props.groups.time));\r\n  let month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  let day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  let year = date.getFullYear();\r\n  let time = date.toLocaleTimeString(\"en-US\");\r\n\r\n  return (\r\n      <React.Fragment>\r\n    {props.groups !== null &&(<section>\r\n      <h2>\r\n        <strong>Group Title:</strong> {props.groups.name}\r\n      </h2>\r\n      {props.groups.createdBy != null && (\r\n        <p>\r\n          <strong>Group Started by:</strong>{\" \"}\r\n          {props.groups.createdBy[0].username}\r\n        </p>\r\n      )}\r\n      <p>\r\n        <strong>Group Type:</strong>{\" \"}\r\n        {parseInt(props.groups.type) ? \"Online\" : \"In Person\"}{\" \"}\r\n      </p>\r\n      <p>\r\n        <strong>Date:</strong> {month + \" \" + day + \", \" + year + \" @ \" + time}\r\n      </p>\r\n      <p>\r\n        <strong>Description:</strong> {props.groups.description}\r\n      </p>\r\n      <p>\r\n        <strong>Tags: </strong>\r\n        {props.groups.tagsArray && props.groups.tagsArray.map((e, index) => (\r\n          \r\n          <TagsBadges\r\n            key = {index}\r\n            tagName = {e}\r\n            index = {index}\r\n          />\r\n        ))}\r\n      </p>\r\n      {props.groups.createdBy && props.groups.createdBy[0].id === props.userInfo._id && (\r\n        <Button onClick={() => setShowUpdateModal(true)} className=\"pr-2\">\r\n          Update\r\n        </Button>\r\n      )}\r\n      {props.groups.createdBy && isLogedIn && props.groups.createdBy[0].id === props.userInfo._id && (\r\n        <Button variant=\"danger\" onClick={() => setShowDeleteModal(true)}>\r\n          Delete\r\n        </Button>\r\n      )}\r\n      {props.groups.createdBy && isLogedIn &&\r\n        props.groups.createdBy[0].id !== props.userInfo._id &&\r\n        !props.groups.members.find(({ id }) => id === props.userInfo._id) && (\r\n          <Button onClick={joinBtnHandler}>Join Group</Button>\r\n        )}\r\n    </section>)}\r\n\r\n    {/*Update Modal/Popup window settings start here                 */}\r\n    <Modal\r\n        show={showUpdateModal}\r\n        onHide={() => setShowUpdateModal(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        animation={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"group-update-modal\">Update Group</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <GroupUpdate\r\n            title={props.groups.name}\r\n            type={props.groups.type}\r\n            date={props.groups.time}\r\n            description={props.groups.description}\r\n            tags={props.groups.tagsArray}\r\n            id={props.groups._id}\r\n            createdBy={props.groups.createdBy}\r\n            members={props.groups.members}\r\n            onModalClose={setShowUpdateModal}\r\n            onDataChanged={props.onDataChanged}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n       {/* Below is the modal to delete a group */}\r\n      <Modal\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        animation={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"group-delte-modal\">Delete Group</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <GroupDelete\r\n            title={props.groups.name}\r\n            id={props.groups._id}\r\n            onModalClose={setShowDeleteModal}\r\n            //onGroupUpdated={}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GroupInfo;\r\n"]},"metadata":{},"sourceType":"module"}